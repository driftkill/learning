package main

import "testing"

func TestAdd(t *testing.T) {
	type test struct {
		mat1   [3][3]int
		mat2   [3][3]int
		answer [3][3]int
	}

	tests := []test{
		test{[3][3]int{{1, 2, 3}, {1, 2, 3}, {1, 2, 3}}, [3][3]int{{1, 2, 3}, {1, 2, 3}, {1, 2, 3}}, [3][3]int{{2, 4, 6}, {2, 4, 6}, {2, 4, 6}}},
		test{[3][3]int{{5, 7, 2}, {2, 6, 2}, {1, 5, 9}}, [3][3]int{{4, 6, 2}, {6, 1, 8}, {2, 5, 3}}, [3][3]int{{9, 13, 4}, {8, 7, 10}, {3, 10, 12}}},
		test{[3][3]int{{2, 3, 4}, {2, 3, 4}, {2, 3, 4}}, [3][3]int{{2, 3, 4}, {2, 3, 4}, {2, 3, 4}}, [3][3]int{{4, 6, 8}, {4, 6, 8}, {4, 6, 8}}},
		test{[3][3]int{{2, 4, 2}, {2, 4, 2}, {2, 4, 2}}, [3][3]int{{2, 4, 2}, {2, 4, 2}, {2, 4, 2}}, [3][3]int{{4, 8, 4}, {4, 8, 4}, {4, 8, 4}}},
		test{[3][3]int{{1, 3, 5}, {1, 3, 5}, {1, 3, 5}}, [3][3]int{{1, 3, 5}, {1, 3, 5}, {1, 3, 5}}, [3][3]int{{2, 6, 10}, {2, 6, 10}, {2, 6, 10}}},
	}

	for _, v := range tests {
		x := add(v.mat1, v.mat2)
		for i := 0; i < 3; i++ {
			for j := 0; j < 3; j++ {
				if x[i][j] != v.answer[i][j] {
					t.Error("Expecting", v.answer, "but got", x)
				}
			}
		}
	}
}
